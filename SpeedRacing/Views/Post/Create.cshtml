@model SpeedRacing.Models.Blog.Post

@{
    ViewBag.Title = "Utwórz post";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Utwórz nowy post</h2>


@using (Html.BeginForm("Create", "Post", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Tytul, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tytul, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tytul, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KrotkiOpis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KrotkiOpis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KrotkiOpis, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tresc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Tresc, new { htmlAttributes = new { @class = "form-control", @id = "CKEDITOR" } })*@
                @Html.TextArea("Tresc",  new { @id = "CKEDITOR" })
                @Html.ValidationMessageFor(model => model.Tresc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrzyjazdyOpis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrzyjazdyOpis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrzyjazdyOpis, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataPublikacji, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataPublikacji, new { htmlAttributes = new { @class = "form-control", @id = "datepickerDataPublikacji" } })
                @Html.ValidationMessageFor(model => model.DataPublikacji, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Autor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Autor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Autor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataModyfikacji, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataModyfikacji, new { htmlAttributes = new { @class = "form-control", @id = "datepickerDataModyfikacji" } })
                @Html.ValidationMessageFor(model => model.DataModyfikacji, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CzyOpublikowany, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CzyOpublikowany)
                    @Html.ValidationMessageFor(model => model.CzyOpublikowany, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Zdjecie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="fileinput fileinput-new" data-provides="fileinput">
                    <div class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 200px; height: 150px;"></div>
                    <div>
                        <span class="btn btn-default btn-file"><span class="fileinput-new">Wybierz zdjęcie</span><span class="fileinput-exists">Zmień</span><input type="file" name="Zdjecie"></span>
                        <a href="#" class="btn btn-default fileinput-exists" data-dismiss="fileinput">Usuń</a>
                    </div>
                </div>
                @*@Html.EditorFor(model => model.Zdjecie, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Zdjecie, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KategorieId, "Kategoria", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("KategorieId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.KategorieId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Wyślij" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Wróć do listy", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        var editor = CKEDITOR.instances['editor1'];
        if (editor) { editor.destroy(true); }
        CKEDITOR.replace('CKEDITOR', {
            enterMode: CKEDITOR.ENTER_BR,
        });

        CKFinder.setupCKEditor(null, '@Url.Content("~/Helpers/ckfinder/")');
</script>

}
